import { Badge } from "@/app/components/ui/badge";
import { PieChart, Pie, Cell, ResponsiveContainer, Tooltip } from "recharts";
import { Vulnerability } from "@/lib/schemas/scan";
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "@/app/components/ui/tabs";

type VulnerabilitySummaryChartsProps = {
  vulnerabilitiesByTarget: Record<string, Vulnerability[]>;
};

export function VulnerabilitySummaryCharts({
  vulnerabilitiesByTarget,
}: VulnerabilitySummaryChartsProps) {
  const targets = Object.keys(vulnerabilitiesByTarget);
  const firstTarget = targets.length > 0 ? targets[0] : "";

  return (
    <div className="mb-6">
      <div className="backdrop-blur-sm bg-white/30 rounded-xl p-4 shadow-md border border-white/50">
        <h3 className="text-lg font-medium mb-2 text-gray-700 font-montserrat">
          Vulnerability Summary
        </h3>
        {targets.length > 0 ? (
          <Tabs defaultValue={firstTarget}>
            <TabsList>
              {targets.map((target) => (
                <TabsTrigger key={target} value={target}>
                  {target}
                </TabsTrigger>
              ))}
            </TabsList>
            {targets.map((target) => {
              const vulns = vulnerabilitiesByTarget[target];
              const targetVulnerabilityCounts = {
                CRITICAL: vulns.filter((v) => v.Severity === "CRITICAL").length,
                HIGH: vulns.filter((v) => v.Severity === "HIGH").length,
                MEDIUM: vulns.filter((v) => v.Severity === "MEDIUM").length,
                LOW: vulns.filter((v) => v.Severity === "LOW").length,
                UNKNOWN: vulns.filter((v) => v.Severity === "UNKNOWN").length,
              };

              const targetVulnerabilityChartData = [
                {
                  name: "Critical",
                  value: targetVulnerabilityCounts.CRITICAL,
                  color: "#f87171",
                },
                {
                  name: "High",
                  value: targetVulnerabilityCounts.HIGH,
                  color: "#fb923c",
                },
                {
                  name: "Medium",
                  value: targetVulnerabilityCounts.MEDIUM,
                  color: "#facc15",
                },
                {
                  name: "Low",
                  value: targetVulnerabilityCounts.LOW,
                  color: "#ec4899",
                },
                {
                  name: "Unknown",
                  value: targetVulnerabilityCounts.UNKNOWN,
                  color: "#94a3b8",
                },
              ];

              return (
                <TabsContent key={target} value={target}>
                  <div className="backdrop-blur-sm bg-white/20 rounded-xl p-4 shadow-sm border border-white/30">
                    <h4 className="text-md font-medium mb-2 text-gray-700 font-montserrat text-center">
                      {target}
                    </h4>
                    <div className="h-64">
                      <ResponsiveContainer width="100%" height="100%">
                        <PieChart>
                          <Pie
                            data={targetVulnerabilityChartData}
                            cx="50%"
                            cy="50%"
                            innerRadius={60}
                            outerRadius={80}
                            paddingAngle={5}
                            dataKey="value"
                          >
                            {targetVulnerabilityChartData.map(
                              (entry, index) => (
                                <Cell
                                  key={`cell-${index}`}
                                  fill={entry.color}
                                />
                              )
                            )}
                          </Pie>
                          <Tooltip />
                        </PieChart>
                      </ResponsiveContainer>
                    </div>
                    <div className="text-center mt-2">
                      <p className="text-sm font-medium">
                        Total: {vulns.length} (UNKNOWN:{" "}
                        {targetVulnerabilityCounts.UNKNOWN}, LOW:{" "}
                        {targetVulnerabilityCounts.LOW}, MEDIUM:{" "}
                        {targetVulnerabilityCounts.MEDIUM}, HIGH:{" "}
                        {targetVulnerabilityCounts.HIGH}, CRITICAL:{" "}
                        {targetVulnerabilityCounts.CRITICAL})
                      </p>
                    </div>
                    <div className="flex flex-wrap gap-2 justify-center mt-2">
                      <Badge className="bg-gradient-to-r from-gray-400 to-gray-500">
                        Unknown: {targetVulnerabilityCounts.UNKNOWN}
                      </Badge>
                      <Badge className="bg-gradient-to-r from-pink-400 to-pink-500">
                        Low: {targetVulnerabilityCounts.LOW}
                      </Badge>
                      <Badge className="bg-gradient-to-r from-yellow-400 to-yellow-500">
                        Medium: {targetVulnerabilityCounts.MEDIUM}
                      </Badge>
                      <Badge className="bg-gradient-to-r from-orange-400 to-orange-500">
                        High: {targetVulnerabilityCounts.HIGH}
                      </Badge>
                      <Badge className="bg-gradient-to-r from-red-400 to-red-500">
                        Critical: {targetVulnerabilityCounts.CRITICAL}
                      </Badge>
                    </div>
                  </div>
                </TabsContent>
              );
            })}
          </Tabs>
        ) : (
          <div className="text-center p-4">
            <p className="text-gray-500">No vulnerability data available</p>
          </div>
        )}
      </div>
    </div>
  );
}
