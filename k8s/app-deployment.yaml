apiVersion: apps/v1
kind: Deployment
metadata:
  name: container-scan-app
  labels:
    app.kubernetes.io/name: container-scan
    app.kubernetes.io/component: app
    app.kubernetes.io/part-of: container-scan
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: container-scan
      app.kubernetes.io/component: app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: container-scan
        app.kubernetes.io/component: app
        app.kubernetes.io/part-of: container-scan
    spec:
      serviceAccountName: container-scan-sa
      volumes:
        - name: postgres-secret
          secret:
            secretName: my-release-postgresql
      initContainers:
        - name: prisma-migrate
          image: localhost:5001/container-scan-app:latest
          command: ["sh", "-c"]
          args:
            - |
              cd /app && pnpm prisma migrate deploy
          env:
            - name: DB_HOST
              value: "postgresql-service"
            - name: DB_PORT
              value: "5432"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgres-password
            - name: DATABASE_URL
              value: "postgresql://postgres:$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/postgres?schema=public"
          volumeMounts:
            - name: postgres-secret
              mountPath: "/mnt/secrets"
              readOnly: true
      containers:
        - name: app
          image: localhost:5001/container-scan-app:latest
          command: ["sh", "-c"]
          args:
            - |
              cd /app && exec pnpm start
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: DB_HOST
              value: "postgresql-service"
            - name: DB_PORT
              value: "5432"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-release-postgresql
                  key: postgres-password
            - name: DATABASE_URL
              value: "postgresql://postgres:$(DB_PASSWORD)@$(DB_HOST):$(DB_PORT)/postgres?schema=public"
          volumeMounts:
            - name: postgres-secret
              mountPath: "/mnt/secrets"
              readOnly: true
          resources:
            limits:
              cpu: "1"
              memory: "512Mi"
            requests:
              cpu: "0.5"
              memory: "256Mi"
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 20
            periodSeconds: 15
